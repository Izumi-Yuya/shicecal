version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: shisecal-test-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./tests:/var/www/html/tests
    networks:
      - shisecal-test-network
    depends_on:
      - db
      - redis
      - mailpit
    environment:
      - APP_ENV=testing
      - DB_HOST=db
      - REDIS_HOST=redis
      - MAIL_HOST=mailpit
    ports:
      - "9000:9000"

  nginx:
    image: nginx:alpine
    container_name: shisecal-test-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./public:/var/www/html/public
      - ./nginx-test.conf:/etc/nginx/conf.d/default.conf
    networks:
      - shisecal-test-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: shisecal-test-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: shisecal_testing
      MYSQL_USER: shisecal_test_user
      MYSQL_PASSWORD: test_secure_password
      MYSQL_ROOT_PASSWORD: test_root_password
    volumes:
      - test_db_data:/var/lib/mysql
      - ./database/test-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - shisecal-test-network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: shisecal-test-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass test_redis_password
    volumes:
      - test_redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - shisecal-test-network

  mailpit:
    image: axllent/mailpit
    container_name: shisecal-test-mailpit
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - shisecal-test-network
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  # Test runner service for automated testing
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: shisecal-test-runner
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    networks:
      - shisecal-test-network
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=testing
      - DB_HOST=db
      - REDIS_HOST=redis
    command: ["php", "artisan", "test", "--coverage"]
    profiles:
      - testing

volumes:
  test_db_data:
    driver: local
  test_redis_data:
    driver: local

networks:
  shisecal-test-network:
    driver: bridge