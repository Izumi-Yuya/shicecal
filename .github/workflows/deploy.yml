name: Deploy to AWS

on:
  push:
    branches: [ production ]
  workflow_dispatch:

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        composer install --prefer-dist --no-interaction --optimize-autoloader
        npm ci
        
    - name: Create test environment
      run: |
        cp .env.example .env
        php artisan key:generate
        touch database/testing.sqlite
        
    - name: Run quality checks
      run: |
        # PHP linting
        vendor/bin/pint --test
        
        # JavaScript linting
        npm run lint:js
        
        # Blade template linting
        npm run lint:blade
        
        # Build verification
        npm run build
        
        # Verify build output
        if [ ! -d "public/build" ] || [ ! -f "public/build/manifest.json" ]; then
          echo "❌ Build verification failed"
          exit 1
        fi
        
        echo "✅ All quality checks passed"
        
    - name: Run tests
      run: |
        php artisan test
        npm run test
        
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        script: |
          cd /home/ec2-user/shicecal
          git pull origin production
          composer install --no-dev --optimize-autoloader
          npm ci --production=false
          
          # Clear existing build artifacts
          rm -rf public/build
          
          # Build assets with Vite
          npm run build
          
          # Verify build output
          if [ ! -d "public/build" ]; then
            echo "❌ Asset build failed"
            exit 1
          fi
          
          if [ ! -f "public/build/manifest.json" ]; then
            echo "❌ Vite manifest file not generated"
            exit 1
          fi
          
          echo "✅ Asset build completed - Files: $(find public/build -type f | wc -l)"
          
          php artisan migrate --force
          php artisan db:seed --class=AdminUserSeeder --force
          php artisan db:seed --class=FacilitySeeder --force
          php artisan db:seed --class=LandInfoSeeder --force
          
          # Clear existing caches first
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan cache:clear
          
          # Rebuild optimized caches
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Verify Vite manifest exists and is valid
          if [ ! -f "public/build/manifest.json" ]; then
            echo "❌ Vite manifest file missing after cache rebuild"
            exit 1
          fi
          
          # Validate manifest JSON
          if ! php -r "json_decode(file_get_contents('public/build/manifest.json')); if (json_last_error() !== JSON_ERROR_NONE) exit(1);"; then
            echo "❌ Vite manifest file is invalid"
            exit 1
          fi
          
          echo "✅ Deployment verification completed"
          
          sudo systemctl restart nginx
          sudo systemctl restart php-fpm