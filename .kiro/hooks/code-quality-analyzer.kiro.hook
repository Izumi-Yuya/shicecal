{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes them for potential improvements including code smells, design patterns, and best practices. Provides suggestions for enhancing readability, maintainability, and performance while preserving functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "app/**/*.php",
      "resources/js/**/*.js",
      "resources/css/**/*.css",
      "resources/views/**/*.blade.php",
      "config/**/*.php",
      "database/**/*.php",
      "tests/**/*.php"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicated code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to Laravel conventions, PSR standards, and framework-specific best practices\n4. **Performance**: Identify potential performance bottlenecks and optimization opportunities\n5. **Security**: Look for common security vulnerabilities and suggest improvements\n6. **Readability**: Suggest improvements for variable naming, method organization, and code clarity\n7. **Testing**: Identify areas that need better test coverage or suggest testable refactoring\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code examples showing the problem\n- Recommended solution with example implementation\n- Rationale for why the change improves code quality\n\nMaintain the existing functionality while suggesting improvements that enhance maintainability, performance, and code quality."
  }
}